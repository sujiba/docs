{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Willkommen For full documentation visit mkdocs.org .","title":"Home"},{"location":"#willkommen","text":"For full documentation visit mkdocs.org .","title":"Willkommen"},{"location":"wiki/hetzner_x_restic/","text":"Hetzner x Restic Einf\u00fchrung Hetzner: Ein deutscher Hosting-, Cloud- und Storageanbieter. Als Speicherort der Backups wird Hetzners Storage Box genutzt. Restic: Ein Programm zur Erstellung von Backups. Diese werden automatisch verschl\u00fcsselt, inkremmentell erzeugt und dedupliziert. Die zu sichernden Daten werden in einem Restic Repository gespeichert. Das Repository kann entweder lokal oder auf einem entfernten Server angelegt werden. Letzteres kann \u00fcber SFTP gemacht werden. Vorbereitung Sofern der zu sichernde Server au\u00dferhalb der Hetzner Cloud steht, muss im Hetzner Robot die \"externe Erreichbarkeit\" aktiviert werden. F\u00fcr den Zugriff auf die Storage Box wird im weiteren SFTP genutzt. Neben der Anmeldung \u00fcber Passwort, ist auch die Authentifizierung \u00fcber SSH-Key m\u00f6glich. SSH-Key generieren Zun\u00e4chst wird der SSH-Key generiert und die authorized_keys Datei vorbereitet. ssh-keygen Wenn SFTP \u00fcber SSH-Port 22 genutzt werden soll, muss der \u00f6ffentliche Schl\u00fcssel in das RFC4716-Format umgewandelt werden. ssh-keygen -e -f .ssh/id_rsa.pub | grep -v \"Comment:\" > .ssh/id_rsa_rfc.pub Der \u00f6ffentliche Schl\u00fcssel wird sowohl im OpenSSH- als auch im RFC4716-Format zur Datei storagebox_authorized_keys hinzugef\u00fcgt. cat .ssh/id_rsa.pub >> storagebox_authorized_keys cat .ssh/id_rsa_rfc.pub >> storagebox_authorized_keys Auf der Storage Box legen wir das Verzeichnis .ssh an und kopieren den Inhalt der storagebox_authorized_keys nach .ssh/authorized_keys. echo -e \"mkdir .ssh \\n chmod 700 .ssh \\n put storagebox_authorized_keys .ssh/authorized_keys \\n chmod 600 .ssh/authorized_keys\" | sftp u123456@u123456.your-storagebox.de SSH-Config anlegen Die SSH-Config verk\u00fcrzt den Befehl zur Verbindung mit dem SFTP-Server, da hier alle wichtigen Parameter zur Anmeldung mitgegeben werden k\u00f6nnen. vi ~/.ssh/config Und folgenden Inhalt hinzuf\u00fcgen: host storagebox HostName u123456.your-storagebox.de User u123456 IdentityFile ~/.ssh/id_rsa ServerAliveInterval 60 ServerAliveCountMax 240 Verzeichnis anlegen echo -e \"mkdir backup_server_1\" | sftp u123456@u123456.your-storagebox.de Hier wird sp\u00e4ter das Backup Repository des Servers auf der Storage Box abgelegt. Restic Installation Debian / Ubuntu RHEL / AlmaLinux apt install restic dnf install epel dnf update dnf install restic Initialisierung Mit folgendem Befehl wird das Restic-Repository auf der Storage Box initialisiert. restic -r sftp:storagebox:/backup_server_1 init Automatisierung Skript Unter /opt/skripte m\u00fcssen die folgenden Dateien angelegt werden: restic_env export RESTIC_REPOSITORY = sftp:storagebox:/backup_server_1 export RESTIC_PASSWORD = PASSWORD backup.sh #!/usr/bin/env bash # This script is intended to be run by a systemd timer #### Kurze Anleitung #### # systemd timer backup.timer startet den daemon backup.service # /etc/systemd/system/backup.timer # /etc/systemd/system/backup.service # systemctl enable backup.timer --now # systemctl list-timers | grep backup # journalctl -u backup.service #### Ende #### # Exit on failure or pipefail set -euo pipefail #Set this to any location you like BACKUP_PATHS = \"/var/lib/docker/volumes /opt/docker_compose\" BACKUP_TAG = systemd.timer # How many backups to keep. RETENTION_DAYS = 7 RETENTION_WEEKS = 4 RETENTION_MONTHS = 12 RETENTION_YEARS = 1 source /opt/skripte/restic_env # Remove locks in case other stale processes kept them in restic unlock & wait $! #Do the backup restic --verbose \\ --tag $BACKUP_TAG \\ backup $BACKUP_PATHS & wait $! # Remove old Backups restic forget \\ --verbose \\ --tag $BACKUP_TAG \\ --prune \\ --keep-daily $RETENTION_DAYS \\ --keep-weekly $RETENTION_WEEKS \\ --keep-monthly $RETENTION_MONTHS \\ --keep-yearly $RETENTION_YEARS & wait $! # Check if everything is fine restic check & wait $! echo \"Backup done!\" Daemon Unter /etc/systemd/system/ werden die folgende Dienste angelegt: backup.timer backup.service [ Unit ] Description = Backup on schedule [ Timer ] OnCalendar = daily Persistent = true [ Install ] WantedBy = timers.target [ Unit ] Description = Backup with restic [ Service ] Type = simple Nice = 10 ExecStart = /opt/skripte/backup.sh #$HOME must be set for restic to find /root/.cache/restic/ Environment = \"HOME=/root\" Abschlie\u00dfend muss der systemd Manager neu geladen und backup.timer in den automatischen Start aufgenommen werden. systemctl daemon-reload systemctl enable backup.timer systemctl start backup.timer Jetzt startet backup.timer den Dienst backup.service t\u00e4glich gegen Mitternacht. Dar\u00fcber hinaus kann backup service auch manuell gestartet werden. systemctl start backup.service # Pr\u00fcfen, ob Fehler aufgetreten sind journalctl -xe backup.service # Pr\u00fcfen, ob Backup erfolgreich restic -r sftp:storagebox:/backup_server_1 snapshots Quellen https://docs.hetzner.com/de/robot/storage-box https://restic.readthedocs.io/en/stable/ https://blog.bithive.space/post/automatic-backups-with-restic/","title":"Hetzner x Restic"},{"location":"wiki/hetzner_x_restic/#hetzner-x-restic","text":"","title":"Hetzner x Restic"},{"location":"wiki/hetzner_x_restic/#einfuhrung","text":"Hetzner: Ein deutscher Hosting-, Cloud- und Storageanbieter. Als Speicherort der Backups wird Hetzners Storage Box genutzt. Restic: Ein Programm zur Erstellung von Backups. Diese werden automatisch verschl\u00fcsselt, inkremmentell erzeugt und dedupliziert. Die zu sichernden Daten werden in einem Restic Repository gespeichert. Das Repository kann entweder lokal oder auf einem entfernten Server angelegt werden. Letzteres kann \u00fcber SFTP gemacht werden.","title":"Einf\u00fchrung"},{"location":"wiki/hetzner_x_restic/#vorbereitung","text":"Sofern der zu sichernde Server au\u00dferhalb der Hetzner Cloud steht, muss im Hetzner Robot die \"externe Erreichbarkeit\" aktiviert werden. F\u00fcr den Zugriff auf die Storage Box wird im weiteren SFTP genutzt. Neben der Anmeldung \u00fcber Passwort, ist auch die Authentifizierung \u00fcber SSH-Key m\u00f6glich.","title":"Vorbereitung"},{"location":"wiki/hetzner_x_restic/#ssh-key-generieren","text":"Zun\u00e4chst wird der SSH-Key generiert und die authorized_keys Datei vorbereitet. ssh-keygen Wenn SFTP \u00fcber SSH-Port 22 genutzt werden soll, muss der \u00f6ffentliche Schl\u00fcssel in das RFC4716-Format umgewandelt werden. ssh-keygen -e -f .ssh/id_rsa.pub | grep -v \"Comment:\" > .ssh/id_rsa_rfc.pub Der \u00f6ffentliche Schl\u00fcssel wird sowohl im OpenSSH- als auch im RFC4716-Format zur Datei storagebox_authorized_keys hinzugef\u00fcgt. cat .ssh/id_rsa.pub >> storagebox_authorized_keys cat .ssh/id_rsa_rfc.pub >> storagebox_authorized_keys Auf der Storage Box legen wir das Verzeichnis .ssh an und kopieren den Inhalt der storagebox_authorized_keys nach .ssh/authorized_keys. echo -e \"mkdir .ssh \\n chmod 700 .ssh \\n put storagebox_authorized_keys .ssh/authorized_keys \\n chmod 600 .ssh/authorized_keys\" | sftp u123456@u123456.your-storagebox.de","title":"SSH-Key generieren"},{"location":"wiki/hetzner_x_restic/#ssh-config-anlegen","text":"Die SSH-Config verk\u00fcrzt den Befehl zur Verbindung mit dem SFTP-Server, da hier alle wichtigen Parameter zur Anmeldung mitgegeben werden k\u00f6nnen. vi ~/.ssh/config Und folgenden Inhalt hinzuf\u00fcgen: host storagebox HostName u123456.your-storagebox.de User u123456 IdentityFile ~/.ssh/id_rsa ServerAliveInterval 60 ServerAliveCountMax 240","title":"SSH-Config anlegen"},{"location":"wiki/hetzner_x_restic/#verzeichnis-anlegen","text":"echo -e \"mkdir backup_server_1\" | sftp u123456@u123456.your-storagebox.de Hier wird sp\u00e4ter das Backup Repository des Servers auf der Storage Box abgelegt.","title":"Verzeichnis anlegen"},{"location":"wiki/hetzner_x_restic/#restic","text":"","title":"Restic"},{"location":"wiki/hetzner_x_restic/#installation","text":"Debian / Ubuntu RHEL / AlmaLinux apt install restic dnf install epel dnf update dnf install restic","title":"Installation"},{"location":"wiki/hetzner_x_restic/#initialisierung","text":"Mit folgendem Befehl wird das Restic-Repository auf der Storage Box initialisiert. restic -r sftp:storagebox:/backup_server_1 init","title":"Initialisierung"},{"location":"wiki/hetzner_x_restic/#automatisierung","text":"","title":"Automatisierung"},{"location":"wiki/hetzner_x_restic/#skript","text":"Unter /opt/skripte m\u00fcssen die folgenden Dateien angelegt werden: restic_env export RESTIC_REPOSITORY = sftp:storagebox:/backup_server_1 export RESTIC_PASSWORD = PASSWORD backup.sh #!/usr/bin/env bash # This script is intended to be run by a systemd timer #### Kurze Anleitung #### # systemd timer backup.timer startet den daemon backup.service # /etc/systemd/system/backup.timer # /etc/systemd/system/backup.service # systemctl enable backup.timer --now # systemctl list-timers | grep backup # journalctl -u backup.service #### Ende #### # Exit on failure or pipefail set -euo pipefail #Set this to any location you like BACKUP_PATHS = \"/var/lib/docker/volumes /opt/docker_compose\" BACKUP_TAG = systemd.timer # How many backups to keep. RETENTION_DAYS = 7 RETENTION_WEEKS = 4 RETENTION_MONTHS = 12 RETENTION_YEARS = 1 source /opt/skripte/restic_env # Remove locks in case other stale processes kept them in restic unlock & wait $! #Do the backup restic --verbose \\ --tag $BACKUP_TAG \\ backup $BACKUP_PATHS & wait $! # Remove old Backups restic forget \\ --verbose \\ --tag $BACKUP_TAG \\ --prune \\ --keep-daily $RETENTION_DAYS \\ --keep-weekly $RETENTION_WEEKS \\ --keep-monthly $RETENTION_MONTHS \\ --keep-yearly $RETENTION_YEARS & wait $! # Check if everything is fine restic check & wait $! echo \"Backup done!\"","title":"Skript"},{"location":"wiki/hetzner_x_restic/#daemon","text":"Unter /etc/systemd/system/ werden die folgende Dienste angelegt: backup.timer backup.service [ Unit ] Description = Backup on schedule [ Timer ] OnCalendar = daily Persistent = true [ Install ] WantedBy = timers.target [ Unit ] Description = Backup with restic [ Service ] Type = simple Nice = 10 ExecStart = /opt/skripte/backup.sh #$HOME must be set for restic to find /root/.cache/restic/ Environment = \"HOME=/root\" Abschlie\u00dfend muss der systemd Manager neu geladen und backup.timer in den automatischen Start aufgenommen werden. systemctl daemon-reload systemctl enable backup.timer systemctl start backup.timer Jetzt startet backup.timer den Dienst backup.service t\u00e4glich gegen Mitternacht. Dar\u00fcber hinaus kann backup service auch manuell gestartet werden. systemctl start backup.service # Pr\u00fcfen, ob Fehler aufgetreten sind journalctl -xe backup.service # Pr\u00fcfen, ob Backup erfolgreich restic -r sftp:storagebox:/backup_server_1 snapshots","title":"Daemon"},{"location":"wiki/hetzner_x_restic/#quellen","text":"https://docs.hetzner.com/de/robot/storage-box https://restic.readthedocs.io/en/stable/ https://blog.bithive.space/post/automatic-backups-with-restic/","title":"Quellen"}]}